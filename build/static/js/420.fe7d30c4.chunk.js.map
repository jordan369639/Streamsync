{"version":3,"file":"static/js/420.fe7d30c4.chunk.js","mappings":"4QAcA,MAAMA,EAAcC,EAAAA,MAAW,IAAK,gCAyGpC,EAxGeC,KAEf,MAEOC,IAASC,EAAAA,EAAAA,GAAkBC,EAAAA,EAAQC,kBAFtB,IAGbC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,IACrCC,EAAiBP,IAElBI,EACDC,EAAa,IAEbG,IAAaR,GAAO,IAAIS,MAAMC,IAChC,IAAIC,EAAW,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QAEhDT,EAAaM,EAAQI,IAAI,KAAK,IACzBC,OAAOC,IACRC,QAAQC,IAAIF,EAAI,IAIfb,IAEAgB,IAAQC,EAAAA,EAAAA,KAAaC,GACnBA,EAAMC,cAOTC,OAAqBC,GAARL,GAAqBA,EAAKM,OAAS,EAQpD,OAEFC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACCL,GAAaG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAGdC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAEbC,MAAO,CACLC,gBAAgB,4CAADC,QAAmD,OAALlC,QAAK,IAALA,OAAK,EAALA,EAAOmC,iBAAsB,OAALnC,QAAK,IAALA,OAAK,EAALA,EAAOoC,aAAW,OAIzGC,GAAG,SAAQR,SAAA,EAKXC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcF,SAAA,EAE3BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,EACjCF,EAAAA,EAAAA,KAAA,UAAQI,UAAS,eAAAG,OAAiB9B,GAAc,gBAAkBkC,QAASA,IAAKjC,EAAa,IAAIwB,UAACF,EAAAA,EAAAA,KAACY,EAAAA,EAAe,CAACC,KAAMC,EAAAA,QAC1HrC,IAAcuB,EAAAA,EAAAA,KAAGe,EAAAA,EAAO,CAACC,QAASvC,EAAWwC,KA7BnC,CACXC,OAAQ,MACRC,MAAO,OACPC,WAAY,CACVC,SAAU,UA4BVrB,EAAAA,EAAAA,KAAA,MAAII,UAAU,aAAYF,SAAO,OAAL7B,QAAK,IAALA,OAAK,EAALA,EAAOiD,kBACnCnB,EAAAA,EAAAA,MAAA,KAAGC,UAAU,aAAYF,SAAA,CAAC,KA7DZqB,EA6DuB,GAADhB,OAAS,OAALlC,QAAK,IAALA,OAAK,EAALA,EAAOmD,UA7DtBD,EAAOxB,OAAS,IAAMwB,EAAOE,UAAU,EAAG,KAAO,MAAQF,UAgEpFpB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,EAC/BC,EAAAA,EAAAA,MAAA,WAASC,UAAU,YAAWF,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,UAAQC,UAAU,UAAUO,QAASA,IAAM/B,EAAmB,OAALP,QAAK,IAALA,OAAK,EAALA,EAAOqD,OAAOxB,SAAA,EAACF,EAAAA,EAAAA,KAACY,EAAAA,EAAe,CAACC,KAAMc,EAAAA,MAAU3B,EAAAA,EAAAA,KAAA,KAAAE,SAAG,aAC5GF,EAAAA,EAAAA,KAAA,UAAQI,UAAU,WAAWO,QAASA,IAAKpB,QAAQC,IAAIK,GAAYK,SAAC,kBAE1EF,EAAAA,EAAAA,KAAA,WAASI,UAAU,0BAOnBJ,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACAF,EAAAA,EAAAA,KAAC4B,EAAAA,GAAa,CAACC,SAAUC,EAAAA,EAAUC,QAASA,IAAKC,OAAOC,SAASC,SAAShC,UAC1EF,EAAAA,EAAAA,KAACmC,EAAAA,SAAQ,CAACN,UAAU7B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAAEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,iBAAkBA,UAC3CF,EAAAA,EAAAA,KAAC9B,EAAW,CAACuB,KAAMA,EAAMf,aAAcA,EAAcE,cAAeA,EAAcH,UAAWA,YA/E3E8C,KA2Fb,C","sources":["bannenr/Banner.jsx"],"sourcesContent":["import React, { Suspense, useEffect, useState } from 'react'\r\nimport \"./banner.css\";\r\nimport Axio from \"../Axio\";\r\nimport Request from '../Request';\r\nimport useFetchMovieData from '../CoustomHook/useFetchMovieData';\r\nimport useMovieTrailer from '../CoustomHook/useMovieTrailer';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\nimport { UseSelector, useSelector } from 'react-redux/es/hooks/useSelector';\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\nimport fallBack from '../Erroboundry/ErrorBoundry';\r\nconst SearchMovie = React.lazy(()=> import('../SearchMovie/SearchMovie'))\r\nconst Banner = () => {\r\n\r\nconst randomMovie = true;\r\nconst truncate = (string) => string.length > 150 ? string.substring(0, 149) + \"...\" : string;\r\nconst [movie] = useFetchMovieData(Request.fetchTrendingDay,randomMovie);\r\nconst [trailerId ,setTrailerId] = useState(\"\");\r\nconst handleTrailer = (movie)=>{\r\n \r\n  if(trailerId){\r\n    setTrailerId(\"\");\r\n  }else{\r\n    movieTrailer(movie||\"\").then((url)=>{\r\n  let trailer =  new URLSearchParams(new URL(url).search);\r\n  \r\n  setTrailerId(trailer.get('v'))\r\n    }).catch((err)=>{\r\n      console.log(err)\r\n    })\r\n    \r\n  }\r\nreturn trailerId;\r\n}\r\nconst [data] = useSelector((state)=>{\r\n  return state.movieSearch;\r\n})\r\n\r\n\r\n\r\n\r\n\r\nconst searchArea = data == undefined || data.length < 1 ? true:false;\r\nconst opts = {\r\n  height: '270',\r\n  width: '100%',\r\n  playerVars: {\r\n    autoplay: 1,\r\n  },\r\n};\r\n  return (\r\n\r\n<>\r\n{searchArea ? <> \r\n\r\n\r\n<div className=\"banner\"\r\n  \r\n  style={{\r\n    backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path || movie?.poster_path}\")`,\r\n   \r\n \r\n  }}\r\n  id='banner'\r\n\r\n>\r\n\r\n\r\n  <div className=\"movieDetails\" >\r\n     \r\n    <div className='bannerImgSection'>\r\n    <button className={`cancelVideo ${trailerId  && \"activeCancel\"}`} onClick={()=> setTrailerId(\"\")}><FontAwesomeIcon icon={faXmark} /></button>\r\n  {trailerId &&  <  YouTube videoId={trailerId} opts={opts}/>}\r\n\r\n    </div>\r\n    <h2 className='movie_type'>{movie?.original_title}</h2>\r\n    <p className='aboutMovie'> {truncate(`${movie?.overview}`)}</p>\r\n\r\n  </div>\r\n  <div className=\"moviesController\">\r\n    <section className='play_info'>\r\n      <button className='playbtn' onClick={() => handleTrailer(movie?.title)}><FontAwesomeIcon icon={faPlay} /><p>PLAY</p></button>\r\n      <button className='moreinfo' onClick={()=> console.log(searchArea)}>more info</button>\r\n    </section>\r\n<section className=\"shadoweffect\">\r\n\r\n</section>\r\n   \r\n\r\n  </div>\r\n</div></>:\r\n<>\r\n<ErrorBoundary fallback={fallBack} onReset={()=> window.location.reload()}>\r\n<Suspense fallback={<><p>loading...</p></>}>\r\n<SearchMovie data={data} setTrailerId={setTrailerId} handleTrailer={handleTrailer}trailerId={trailerId}/>\r\n</Suspense>\r\n</ErrorBoundary>\r\n</>\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n \r\n  </>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Banner"],"names":["SearchMovie","React","Banner","movie","useFetchMovieData","Request","fetchTrendingDay","trailerId","setTrailerId","useState","handleTrailer","movieTrailer","then","url","trailer","URLSearchParams","URL","search","get","catch","err","console","log","data","useSelector","state","movieSearch","searchArea","undefined","length","_jsx","_Fragment","children","_jsxs","className","style","backgroundImage","concat","backdrop_path","poster_path","id","onClick","FontAwesomeIcon","icon","faXmark","YouTube","videoId","opts","height","width","playerVars","autoplay","original_title","string","overview","substring","title","faPlay","ErrorBoundary","fallback","fallBack","onReset","window","location","reload","Suspense"],"sourceRoot":""}