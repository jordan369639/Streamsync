{"version":3,"file":"static/js/372.79e404c5.chunk.js","mappings":"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","sources":["LoginPage/signUp.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport \"./signup.css\";\r\nimport backImg from \"./signupbackground.jpg\"\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { app } from '../Firebase/firebase';\r\nimport { useDispatch } from 'react-redux';\r\nimport { adduser } from '../app/LoginLogout';\r\nconst SignUp = ({email}) => {\r\nconst auth = getAuth(app);\r\nconst refemail = useRef(null);\r\nconst refpassword = useRef(null);\r\nconst refcpassword = useRef(null);\r\nconst [password,setpasswrdmismatch] = useState(false);\r\nconst [signup,Setsignup] = useState(false);\r\nconst dispatch = useDispatch()\r\n\r\nuseEffect(() => {\r\nrefemail.current.value = email\r\n}, [])\r\n\r\nconst register = (e)=>{\r\n  if(refpassword.current.value === refcpassword.current.value){\r\n    createUserWithEmailAndPassword(auth, refemail.current.value, refpassword.current.value)\r\n    .then((userCredential) => {\r\n\r\n      const user = userCredential.user;\r\n    \r\n      \r\n\r\n    })\r\n    .catch((error) => {\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(errorMessage)\r\n  \r\n    });\r\n  }else{\r\n    setpasswrdmismatch(true)\r\n  }\r\n  \r\ne.preventDefault()\r\n  }\r\n  const signin = (e)=>{\r\n    e.preventDefault();\r\n  signInWithEmailAndPassword(auth, refemail.current.value, refpassword.current.value)\r\n  .then((user) => {\r\n\r\n   \r\n    dispatch(adduser({\r\n      userId: user.uid,\r\n      email: user.email,\r\n      name: user.name\r\n    }))\r\nconsole.log(user)\r\n \r\n  })\r\n  .catch((error) => {\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    console.log(errorMessage)\r\n  });\r\n  }\r\n  return (\r\n    <>\r\n    <div className=\"signup\"\r\n    style={{\r\n        backgroundImage: `url(${backImg})`\r\n    }}>\r\n\r\n\r\n        <div className=\"container\">\r\n{signup ? <>  <form action=\"\">\r\n<input type=\"email\" name=\"\" id=\"signupmail\" placeholder='Enter your email'className='signin' ref={refemail}/>\r\n<input type=\"password\" name=\"\" id=\"siguppasswrd\" placeholder='password'className='signin' ref={refpassword}/>\r\n<input type=\"password\" name=\"\" id=\"signupcpasswrd\" placeholder='confirm password'className='signin'ref={refcpassword}/>\r\n<p style={{color:\"red\"}} className={`passwrd ${password && 'wrongpasswrd'}`}>Password Mismatch</p>\r\n<button className='submit' onClick={register}>sign up</button>  \r\n<h3><span className='span1'>Already A StreamSync user?</span> <span className='span2' onClick={()=> Setsignup(false)}> Sign in </span></h3>\r\n            </form></>:<>\r\n            \r\n            <form action=\"\">\r\n<input type=\"email\" name=\"\" id=\"sinmail\" placeholder='Enter your email'className='signin' ref={refemail}/>\r\n<input type=\"password\" name=\"\" id=\"sinpawwsrd\" placeholder='password'className='signin' ref={refpassword}/>\r\n<button className='submit' onClick={(e) => signin(e)}>sign in</button>  \r\n<h3><span className='span1'>New to StreamSync?</span> <span className='span2' onClick={()=> Setsignup(true)}> Sign up now </span></h3>\r\n            </form>\r\n            \r\n            </>}\r\n          \r\n\r\n        </div>\r\n    </div>\r\n    \r\n    \r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default SignUp"],"names":["_ref","email","auth","getAuth","app","refemail","useRef","refpassword","refcpassword","password","setpasswrdmismatch","useState","signup","Setsignup","dispatch","useDispatch","useEffect","current","value","_jsx","_Fragment","children","className","style","backgroundImage","concat","backImg","_jsxs","action","type","name","id","placeholder","ref","color","onClick","e","createUserWithEmailAndPassword","then","userCredential","user","catch","error","code","errorMessage","message","console","log","preventDefault","signInWithEmailAndPassword","adduser","userId","uid","signin"],"sourceRoot":""}