{"version":3,"file":"static/js/662.519e6c64.chunk.js","mappings":"8SAKA,MAqDA,EArDkBA,KAClB,MAAMC,EAAMC,IAAYC,EAAAA,EAAAA,WAAS,IAC3BC,EAAOC,IAAiBF,EAAAA,EAAAA,WAAS,IACjCG,EAAMC,IAAYJ,EAAAA,EAAAA,UAAS,IAQ3BK,EAAaC,IACnBA,EAAEC,iBACFL,GAAc,EAAK,EAGjB,OACEM,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAECT,GAASO,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAAEF,EAAAA,EAAAA,KAACG,EAAAA,QAAM,CAACR,MAAOA,OAAYS,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,CAAE,KAACE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YACzDC,MAAO,CAAEC,gBAAgB,OAADC,OAASC,EAAQ,MAAMP,SAAA,EAGnDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQH,SAAA,EAErBF,EAAAA,EAAAA,KAAA,WAASK,UAAU,YAAWH,UAACF,EAAAA,EAAAA,KAAA,OAAKU,IAAKC,EAAMC,IAAI,QACnDZ,EAAAA,EAAAA,KAAA,UAAQa,QAAUf,GAAID,EAAUC,GAAIO,UAAU,WAAUH,SAAC,gBAE3DE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBH,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mDACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,+EAELE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYH,SAAA,EAE3BF,EAAAA,EAAAA,KAAA,SAAOc,KAAK,QAAQC,KAAK,GAAGC,GAAG,aAAaX,UAAU,aAAYY,SAAWnB,GAAKP,EA9B3DI,KAElB,GAAGA,EAAMuB,MADQ,wEAGhB,OADAtB,EAASD,IACF,CACR,EAyBsFwB,CAAcrB,EAAEsB,OAAOC,WAElHrB,EAAAA,EAAAA,KAAA,UAAQK,UAAU,WAAWQ,QAAUf,GAAKD,EAAUC,GAAGI,SAAC,WAAcF,EAAAA,EAAAA,KAAA,aAExEA,EAAAA,EAAAA,KAAA,WAASK,UAAU,QAAOH,SAExBZ,GAAQU,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAAMD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAAEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0CASd,C,uLC9CP,MA4FA,EA5FeoB,IAAc,IAAb,MAAC3B,GAAM2B,EACvB,MAAMC,GAAOC,EAAAA,EAAAA,IAAQC,EAAAA,GACfC,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAcD,EAAAA,EAAAA,QAAO,MACrBE,GAAeF,EAAAA,EAAAA,QAAO,OACrBG,EAASC,IAAsBvC,EAAAA,EAAAA,WAAS,IACxCC,EAAOuC,IAAaxC,EAAAA,EAAAA,WAAS,GAC9ByC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACVT,EAASU,QAAQf,MAAQ1B,CAAK,GAC3B,IA4CD,OACEK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACAF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,SACfC,MAAO,CACHC,gBAAgB,OAADC,OAAS6B,EAAO,MACjCnC,UAGEF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,YAAWH,SACjCT,GAASW,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,CAAE,MAAEE,EAAAA,EAAAA,MAAA,QAAMkC,OAAO,GAAEpC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,SAAOc,KAAK,QAAQC,KAAK,GAAGC,GAAG,aAAauB,YAAY,mBAAkBlC,UAAU,SAASmC,IAAKd,KAClG1B,EAAAA,EAAAA,KAAA,SAAOc,KAAK,WAAWC,KAAK,GAAGC,GAAG,eAAeuB,YAAY,WAAUlC,UAAU,SAASmC,IAAKZ,KAC/F5B,EAAAA,EAAAA,KAAA,SAAOc,KAAK,WAAWC,KAAK,GAAGC,GAAG,iBAAiBuB,YAAY,mBAAkBlC,UAAU,SAAQmC,IAAKX,KACxG7B,EAAAA,EAAAA,KAAA,KAAGM,MAAO,CAACmC,MAAM,OAAQpC,UAAS,WAAAG,OAAasB,GAAY,gBAAiB5B,SAAC,uBAC7EF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,SAASQ,QAxDTf,IACb8B,EAAYQ,QAAQf,QAAUQ,EAAaO,QAAQf,OACpDqB,EAAAA,EAAAA,IAA+BnB,EAAMG,EAASU,QAAQf,MAAOO,EAAYQ,QAAQf,OAChFsB,MAAMC,IAEQA,EAAeC,IAAI,IAKjCC,OAAOC,IACYA,EAAMC,KAAxB,MACMC,EAAeF,EAAMG,QAC3BC,QAAQC,IAAIH,EAAa,IAI3BlB,GAAmB,GAGvBjC,EAAEC,gBAAgB,EAoC2BG,SAAC,aAC9CE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EAAIF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,QAAOH,SAAC,+BAAiC,KAACF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,QAAQQ,QAASA,IAAKmB,GAAU,GAAO9B,SAAC,wBAC/FF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAEXE,EAAAA,EAAAA,MAAA,QAAMkC,OAAO,GAAEpC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,SAAOc,KAAK,QAAQC,KAAK,GAAGC,GAAG,UAAUuB,YAAY,mBAAkBlC,UAAU,SAASmC,IAAKd,KAC/F1B,EAAAA,EAAAA,KAAA,SAAOc,KAAK,WAAWC,KAAK,GAAGC,GAAG,aAAauB,YAAY,WAAUlC,UAAU,SAASmC,IAAKZ,KAC7F5B,EAAAA,EAAAA,KAAA,UAAQK,UAAU,SAASQ,QAAUf,GAzCnBA,KACdA,EAAEC,kBACJsD,EAAAA,EAAAA,IAA2B9B,EAAMG,EAASU,QAAQf,MAAOO,EAAYQ,QAAQf,OAC5EsB,MAAME,IAGLZ,GAASqB,EAAAA,EAAAA,GAAQ,CACfC,OAAQV,EAAKW,IACb7D,MAAOkD,EAAKlD,MACZoB,KAAM8B,EAAK9B,QAEjBoC,QAAQC,IAAIP,EAAK,IAGdC,OAAOC,IACYA,EAAMC,KAAxB,MACMC,EAAeF,EAAMG,QAC3BC,QAAQC,IAAIH,EAAa,GACzB,EAuBuCQ,CAAO3D,GAAGI,SAAC,aACtDE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EAAIF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,QAAOH,SAAC,uBAAyB,KAACF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,QAAQQ,QAASA,IAAKmB,GAAU,GAAM9B,SAAC,+BAWtG,C","sources":["LoginPage/LoginPage.jsx","LoginPage/signUp.jsx"],"sourcesContent":["import React, { Suspense, useState } from 'react'\r\nimport loginImg from \"./loginPoster.jpg\"\r\nimport \"./login.css\"\r\nimport SignUp from './signUp';\r\nimport logo from \"../images/SSLOGO1.webp\"\r\nconst LoginPage = () => {\r\nconst[valid,setValid] = useState(true);\r\nconst[signup,setsignuppage] = useState(false);\r\nconst[email,setemail] = useState(\"\")\r\nconst validateEmail = (email)=>{\r\n     let validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n     if(email.match(validRegex)){\r\n      setemail(email)\r\n      return true;\r\n     }\r\n}\r\nconst setSignup = (e)=>{\r\ne.preventDefault();\r\nsetsignuppage(true);\r\n}\r\n\r\n  return (\r\n    <>\r\n    \r\n    {signup ? <><SignUp email={email}/></>:<> <div className='loginArea'\r\n    style={{ backgroundImage: `url(${loginImg})` }}\r\n    \r\n    >\r\n<div className=\"header\">\r\n\r\n  <section className='loginLogo'><img src={logo} alt=\"\" /></section>\r\n  <button onClick={(e)=>setSignup(e)} className='siginbtn'>sign in</button>\r\n</div>\r\n<div className=\"aboutStreamsync\">\r\n  <h2>Unlimited Movies And Web Series And Much More</h2>\r\n  <p>Ready to watch? Enter your email to create or restart your membership.</p>\r\n</div>\r\n<div className=\"inputField\">\r\n  \r\n<input type=\"email\" name=\"\" id=\"logininput\" className='emailInput'onChange={(e)=> setValid(validateEmail(e.target.value))}\r\n/>\r\n<button className='loginbtn' onClick={(e)=> setSignup(e)}>login</button><br />\r\n</div>\r\n<section className='alert'>\r\n{\r\n  valid ? <></>:<><p>Please Enter a Valid Email</p></>\r\n}\r\n</section>\r\n\r\n\r\n    </div>\r\n   \r\n    \r\n    </>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginPage","import React, { useEffect, useRef, useState } from 'react'\r\nimport \"./signup.css\";\r\nimport backImg from \"./signupbackground.jpg\"\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { app } from '../Firebase/firebase';\r\nimport { useDispatch } from 'react-redux';\r\nimport { adduser } from '../app/LoginLogout';\r\nconst SignUp = ({email}) => {\r\nconst auth = getAuth(app);\r\nconst refemail = useRef(null);\r\nconst refpassword = useRef(null);\r\nconst refcpassword = useRef(null);\r\nconst [password,setpasswrdmismatch] = useState(false);\r\nconst [signup,Setsignup] = useState(false);\r\nconst dispatch = useDispatch()\r\n\r\nuseEffect(() => {\r\nrefemail.current.value = email\r\n}, [])\r\n\r\nconst register = (e)=>{\r\n  if(refpassword.current.value === refcpassword.current.value){\r\n    createUserWithEmailAndPassword(auth, refemail.current.value, refpassword.current.value)\r\n    .then((userCredential) => {\r\n\r\n      const user = userCredential.user;\r\n    \r\n      \r\n\r\n    })\r\n    .catch((error) => {\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(errorMessage)\r\n  \r\n    });\r\n  }else{\r\n    setpasswrdmismatch(true)\r\n  }\r\n  \r\ne.preventDefault()\r\n  }\r\n  const signin = (e)=>{\r\n    e.preventDefault();\r\n  signInWithEmailAndPassword(auth, refemail.current.value, refpassword.current.value)\r\n  .then((user) => {\r\n\r\n   \r\n    dispatch(adduser({\r\n      userId: user.uid,\r\n      email: user.email,\r\n      name: user.name\r\n    }))\r\nconsole.log(user)\r\n \r\n  })\r\n  .catch((error) => {\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    console.log(errorMessage)\r\n  });\r\n  }\r\n  return (\r\n    <>\r\n    <div className=\"signup\"\r\n    style={{\r\n        backgroundImage: `url(${backImg})`\r\n    }}>\r\n\r\n\r\n        <div className=\"container\">\r\n{signup ? <>  <form action=\"\">\r\n<input type=\"email\" name=\"\" id=\"signupmail\" placeholder='Enter your email'className='signin' ref={refemail}/>\r\n<input type=\"password\" name=\"\" id=\"siguppasswrd\" placeholder='password'className='signin' ref={refpassword}/>\r\n<input type=\"password\" name=\"\" id=\"signupcpasswrd\" placeholder='confirm password'className='signin'ref={refcpassword}/>\r\n<p style={{color:\"red\"}} className={`passwrd ${password && 'wrongpasswrd'}`}>Password Mismatch</p>\r\n<button className='submit' onClick={register}>sign up</button>  \r\n<h3><span className='span1'>Already A StreamSync user?</span> <span className='span2' onClick={()=> Setsignup(false)}> Sign in </span></h3>\r\n            </form></>:<>\r\n            \r\n            <form action=\"\">\r\n<input type=\"email\" name=\"\" id=\"sinmail\" placeholder='Enter your email'className='signin' ref={refemail}/>\r\n<input type=\"password\" name=\"\" id=\"sinpawwsrd\" placeholder='password'className='signin' ref={refpassword}/>\r\n<button className='submit' onClick={(e) => signin(e)}>sign in</button>  \r\n<h3><span className='span1'>New to StreamSync?</span> <span className='span2' onClick={()=> Setsignup(true)}> Sign up now </span></h3>\r\n            </form>\r\n            \r\n            </>}\r\n          \r\n\r\n        </div>\r\n    </div>\r\n    \r\n    \r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default SignUp"],"names":["LoginPage","valid","setValid","useState","signup","setsignuppage","email","setemail","setSignup","e","preventDefault","_jsx","_Fragment","children","SignUp","_jsxs","className","style","backgroundImage","concat","loginImg","src","logo","alt","onClick","type","name","id","onChange","match","validateEmail","target","value","_ref","auth","getAuth","app","refemail","useRef","refpassword","refcpassword","password","setpasswrdmismatch","Setsignup","dispatch","useDispatch","useEffect","current","backImg","action","placeholder","ref","color","createUserWithEmailAndPassword","then","userCredential","user","catch","error","code","errorMessage","message","console","log","signInWithEmailAndPassword","adduser","userId","uid","signin"],"sourceRoot":""}